//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFGameLibrary.Client.WCFGameLibraryServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFGameLibraryServices.IWCFGameLibraryService")]
    public interface IWCFGameLibraryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFGameLibraryService/GetAllGames", ReplyAction="http://tempuri.org/IWCFGameLibraryService/GetAllGamesResponse")]
        System.Collections.ObjectModel.ObservableCollection<WCFGameLibrary.Model.Game> GetAllGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFGameLibraryService/GetAllGames", ReplyAction="http://tempuri.org/IWCFGameLibraryService/GetAllGamesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<WCFGameLibrary.Model.Game>> GetAllGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFGameLibraryService/Add", ReplyAction="http://tempuri.org/IWCFGameLibraryService/AddResponse")]
        void Add(WCFGameLibrary.Model.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFGameLibraryService/Add", ReplyAction="http://tempuri.org/IWCFGameLibraryService/AddResponse")]
        System.Threading.Tasks.Task AddAsync(WCFGameLibrary.Model.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFGameLibraryService/Delete", ReplyAction="http://tempuri.org/IWCFGameLibraryService/DeleteResponse")]
        void Delete(WCFGameLibrary.Model.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFGameLibraryService/Delete", ReplyAction="http://tempuri.org/IWCFGameLibraryService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(WCFGameLibrary.Model.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFGameLibraryService/Save", ReplyAction="http://tempuri.org/IWCFGameLibraryService/SaveResponse")]
        void Save();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFGameLibraryService/Save", ReplyAction="http://tempuri.org/IWCFGameLibraryService/SaveResponse")]
        System.Threading.Tasks.Task SaveAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFGameLibraryServiceChannel : WCFGameLibrary.Client.WCFGameLibraryServices.IWCFGameLibraryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFGameLibraryServiceClient : System.ServiceModel.ClientBase<WCFGameLibrary.Client.WCFGameLibraryServices.IWCFGameLibraryService>, WCFGameLibrary.Client.WCFGameLibraryServices.IWCFGameLibraryService {
        
        public WCFGameLibraryServiceClient() {
        }
        
        public WCFGameLibraryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFGameLibraryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFGameLibraryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFGameLibraryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WCFGameLibrary.Model.Game> GetAllGames() {
            return base.Channel.GetAllGames();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<WCFGameLibrary.Model.Game>> GetAllGamesAsync() {
            return base.Channel.GetAllGamesAsync();
        }
        
        public void Add(WCFGameLibrary.Model.Game game) {
            base.Channel.Add(game);
        }
        
        public System.Threading.Tasks.Task AddAsync(WCFGameLibrary.Model.Game game) {
            return base.Channel.AddAsync(game);
        }
        
        public void Delete(WCFGameLibrary.Model.Game game) {
            base.Channel.Delete(game);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(WCFGameLibrary.Model.Game game) {
            return base.Channel.DeleteAsync(game);
        }
        
        public void Save() {
            base.Channel.Save();
        }
        
        public System.Threading.Tasks.Task SaveAsync() {
            return base.Channel.SaveAsync();
        }
    }
}
